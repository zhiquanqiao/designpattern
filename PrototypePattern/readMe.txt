原型模式（Prototype Pattern）是用于创建重复对象，同时又能保证性能。这种类型的设计模式属于创建性模式，它提供一种创建对象的最佳方式。

这种模式实现了一个原型接口，该接口用于创建当前对象的克隆。当直接创建对象的代价比较大时，则采用这种模式。例如，一个对象需要一个高代价的数据库操作之后被
创建，我们可以缓存该对象，在下一次请求时返回它的克隆，在需要的时候需要更新数据库，用来减少数据库调用。


意图：用原型实力制定创建杜希昂的种类，并且通过拷贝这些对象创建新杜希昂。

使用时机：1.当一个系统应该独立于他的产品创建，构成和表示时。
          2.当实例化的类是要运行时候指定时，例如动态加载。
          3.为了避免创建一个与产品类层次平行的工厂层次时。
          4.当一个类的实例就嗯那个有几个不同状态组合成一种时。建立行营数目的原型并克隆他们每次可能适合手工状态实例化该工具类更方便一些。
解决方式：利用已有的一个原型杜希昂，快速生成和原型对象一样的实例。
